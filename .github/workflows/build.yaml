name: Build

on:
  workflow_call:
    inputs:
      runs-on:
        required: true
        type: string
        description: Runner name for the build job
      platform:
        required: true
        type: string
        description: Build platform name
      dind:
        required: false
        type: boolean
        default: false
        description: Use Docker-in-Docker container

env:
  REGISTRY_IMAGE: ghcr.io/${{ github.repository }}
  META_TAGS: |
    type=raw,value=latest,enable={{is_default_branch}}
    type=semver,pattern={{version}}
    type=semver,pattern={{major}}.{{minor}}
    type=semver,pattern={{major}}
    type=ref,event=branch
    type=ref,event=pr
    type=sha

jobs:
  build:
    name: Build
    runs-on: ${{ inputs.runs-on }}
    container: ${{ inputs.dind && 'docker:dind-rootless' || null }}
    steps:
      - name: Setup Docker (self-hosted)
        if: inputs.dind
        run: |
          dockerd-entrypoint.sh &
          while ! docker info >/dev/null 2>&1; do sleep 1; done

      - name: Prepare
        run: echo "PLATFORM_PAIR=${PLATFORM//\//-}" >> $GITHUB_ENV
        env:
          PLATFORM: ${{ inputs.platform }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: ${{ env.META_TAGS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: src
          platforms: ${{ inputs.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY_IMAGE }}:latest
          cache-to: type=inline
          outputs: |-
            type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
